{"version":3,"file":"913.js","mappings":"6JAAIA,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAMO,SAASO,EAAaC,GACzB,OAAOnB,EAAUoB,UAAM,OAAQ,GAAQ,YAEnC,IAEI,aADuB,IAAAC,UAASF,KAKrB,IAGf,CACA,MAAOG,GAEH,OADAC,QAAQD,MAAM,uBAAwBH,EAAM,WAAYG,GACjD,IACX,CACJ,GACJ,C","sources":["webpack://wcslight/../FITSParser/lib-esm/getLocalFile.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { readFile } from \"node:fs/promises\";\n// import path from 'path';\n// import {fileURLToPath} from 'url';\n// const __filename = fileURLToPath(import.meta.url);\n// const __dirname = path.dirname(__filename);\nexport function getLocalFile(path) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // let buffer: Buffer;\n        try {\n            const response = yield readFile(path);\n            if (response) {\n                return response;\n            }\n            else {\n                return null;\n            }\n            // buffer = await readFile(path);\n        }\n        catch (error) {\n            console.error(\"Failed to read path:\", path, \"\\nError:\", error);\n            return null;\n        }\n    });\n}\n//# sourceMappingURL=getLocalFile.js.map"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","getLocalFile","path","this","readFile","error","console"],"sourceRoot":""}