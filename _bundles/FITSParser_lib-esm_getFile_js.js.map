{"version":3,"file":"FITSParser_lib-esm_getFile_js.js","mappings":";;;;;;;;;;;;;;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACgC;AACzB;AACP;AACA;AACA,yBAAyB,wCAAK;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA","sources":["webpack://wcslight/../FITSParser/lib-esm/getFile.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport fetch from 'cross-fetch';\nexport function getFile(uri) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let response;\n        response = yield fetch(uri);\n        if (!response.ok) {\n            return new ArrayBuffer(0);\n        }\n        else {\n            return response.arrayBuffer();\n        }\n    });\n}\n//# sourceMappingURL=getFile.js.map"],"names":[],"sourceRoot":""}